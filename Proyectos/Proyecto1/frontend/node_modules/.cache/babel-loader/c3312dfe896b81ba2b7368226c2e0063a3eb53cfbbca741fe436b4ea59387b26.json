{"ast":null,"code":"import React,{useEffect,useRef}from\"react\";import{DataSet,Network}from\"vis-network/standalone/umd/vis-network.min\";import{jsx as _jsx}from\"react/jsx-runtime\";const Tree=_ref=>{let{processData}=_ref;const containerRef=useRef(null);let networkRef=useRef(null);useEffect(()=>{if(processData&&containerRef.current){const nodes=new DataSet();const edges=new DataSet();nodes.add({id:processData.pid,label:\"\".concat(processData.name,\"\\npid = \").concat(processData.pid)});if(processData.child){processData.child.forEach(child=>{nodes.add({id:child.pid,label:\"\".concat(child.name,\"\\npid = \").concat(child.pid)});edges.add({from:child.pidPadre,to:child.pid});});}const data={nodes:nodes,edges:edges};const options={layout:{hierarchical:{direction:\"UD\",sortMethod:\"directed\"}},edges:{font:{align:\"top\"}}};networkRef.current=new Network(containerRef.current,data,options);}return()=>{if(networkRef.current){networkRef.current.destroy();}};},[processData]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{ref:containerRef,style:{width:'100%',height:'550px'}})});};export default Tree;","map":{"version":3,"names":["React","useEffect","useRef","DataSet","Network","jsx","_jsx","Tree","_ref","processData","containerRef","networkRef","current","nodes","edges","add","id","pid","label","concat","name","child","forEach","from","pidPadre","to","data","options","layout","hierarchical","direction","sortMethod","font","align","destroy","children","ref","style","width","height"],"sources":["/home/josep/USAC/7mo_Semestre/Sistemas_operativos_1/Laboratorio/Repositorio/SO1_1S2024_202111478/Proyectos/Proyecto1/frontend/src/components/tree.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { DataSet, Network } from \"vis-network/standalone/umd/vis-network.min\";\n\nconst Tree = ({ processData }) => {\n    const containerRef = useRef(null);\n    let networkRef = useRef(null);\n\n    useEffect(() => {\n        if (processData && containerRef.current) {\n            const nodes = new DataSet();\n            const edges = new DataSet();\n\n            nodes.add({ id: processData.pid, label: `${processData.name}\\npid = ${processData.pid}` });\n\n            if (processData.child) {\n\n                processData.child.forEach(child => {\n                    nodes.add({ id: child.pid, label: `${child.name}\\npid = ${child.pid}` });\n                    edges.add({ from: child.pidPadre, to: child.pid });\n                });\n            }\n\n            const data = {\n                nodes: nodes,\n                edges: edges\n            };\n\n            const options = {\n                layout: {\n                    hierarchical: {\n                        direction: \"UD\",\n                        sortMethod: \"directed\",\n                    },\n                },\n                edges: {\n                    font: { align: \"top\" }\n                }\n            };\n\n            networkRef.current = new Network(containerRef.current, data, options);\n        }\n\n        return () => {\n            if (networkRef.current) {\n                networkRef.current.destroy();\n            }\n        };\n    }, [processData]);\n\n    return (\n        <div>\n            <div ref={containerRef} style={{ width: '100%', height: '550px' }} ></div>\n        </div>\n    );\n\n};\n\nexport default Tree;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAChD,OAASC,OAAO,CAAEC,OAAO,KAAQ,4CAA4C,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,IAAI,CAAGC,IAAA,EAAqB,IAApB,CAAEC,WAAY,CAAC,CAAAD,IAAA,CACzB,KAAM,CAAAE,YAAY,CAAGR,MAAM,CAAC,IAAI,CAAC,CACjC,GAAI,CAAAS,UAAU,CAAGT,MAAM,CAAC,IAAI,CAAC,CAE7BD,SAAS,CAAC,IAAM,CACZ,GAAIQ,WAAW,EAAIC,YAAY,CAACE,OAAO,CAAE,CACrC,KAAM,CAAAC,KAAK,CAAG,GAAI,CAAAV,OAAO,CAAC,CAAC,CAC3B,KAAM,CAAAW,KAAK,CAAG,GAAI,CAAAX,OAAO,CAAC,CAAC,CAE3BU,KAAK,CAACE,GAAG,CAAC,CAAEC,EAAE,CAAEP,WAAW,CAACQ,GAAG,CAAEC,KAAK,IAAAC,MAAA,CAAKV,WAAW,CAACW,IAAI,aAAAD,MAAA,CAAWV,WAAW,CAACQ,GAAG,CAAG,CAAC,CAAC,CAE1F,GAAIR,WAAW,CAACY,KAAK,CAAE,CAEnBZ,WAAW,CAACY,KAAK,CAACC,OAAO,CAACD,KAAK,EAAI,CAC/BR,KAAK,CAACE,GAAG,CAAC,CAAEC,EAAE,CAAEK,KAAK,CAACJ,GAAG,CAAEC,KAAK,IAAAC,MAAA,CAAKE,KAAK,CAACD,IAAI,aAAAD,MAAA,CAAWE,KAAK,CAACJ,GAAG,CAAG,CAAC,CAAC,CACxEH,KAAK,CAACC,GAAG,CAAC,CAAEQ,IAAI,CAAEF,KAAK,CAACG,QAAQ,CAAEC,EAAE,CAAEJ,KAAK,CAACJ,GAAI,CAAC,CAAC,CACtD,CAAC,CAAC,CACN,CAEA,KAAM,CAAAS,IAAI,CAAG,CACTb,KAAK,CAAEA,KAAK,CACZC,KAAK,CAAEA,KACX,CAAC,CAED,KAAM,CAAAa,OAAO,CAAG,CACZC,MAAM,CAAE,CACJC,YAAY,CAAE,CACVC,SAAS,CAAE,IAAI,CACfC,UAAU,CAAE,UAChB,CACJ,CAAC,CACDjB,KAAK,CAAE,CACHkB,IAAI,CAAE,CAAEC,KAAK,CAAE,KAAM,CACzB,CACJ,CAAC,CAEDtB,UAAU,CAACC,OAAO,CAAG,GAAI,CAAAR,OAAO,CAACM,YAAY,CAACE,OAAO,CAAEc,IAAI,CAAEC,OAAO,CAAC,CACzE,CAEA,MAAO,IAAM,CACT,GAAIhB,UAAU,CAACC,OAAO,CAAE,CACpBD,UAAU,CAACC,OAAO,CAACsB,OAAO,CAAC,CAAC,CAChC,CACJ,CAAC,CACL,CAAC,CAAE,CAACzB,WAAW,CAAC,CAAC,CAEjB,mBACIH,IAAA,QAAA6B,QAAA,cACI7B,IAAA,QAAK8B,GAAG,CAAE1B,YAAa,CAAC2B,KAAK,CAAE,CAAEC,KAAK,CAAE,MAAM,CAAEC,MAAM,CAAE,OAAQ,CAAE,CAAO,CAAC,CACzE,CAAC,CAGd,CAAC,CAED,cAAe,CAAAhC,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}