{"ast":null,"code":"import React,{useState}from'react';import'bootstrap/dist/css/bootstrap.min.css';import'../css/statediagram.css';import CardG from'../components/cardg';import Row from'react-bootstrap/Row';import Col from'react-bootstrap/Col';import{SiAddthis}from\"react-icons/si\";import{FaStopCircle}from\"react-icons/fa\";import{FaCirclePlay}from\"react-icons/fa6\";import{FaSkullCrossbones}from\"react-icons/fa6\";import{ToastContainer,toast}from'react-toastify';import'react-toastify/dist/ReactToastify.css';import State from'../components/state';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function StateDiagram(){const[pid,setPid]=useState(null);const[previusAction,setPreviusAction]=useState(null);const[currentAction,setCurrentAction]=useState(null);const handleClick=action=>{//Si es la accion de start se debe hacer un fetch a la api para obtener el pid\nif(previusAction===action){toast.error('You can not do the same action twice');return;}if(action==='start'){//si el pid es null se debe hacer un fetch a la api para obtener el pid\nif(pid!==null){toast.error('You can not start a new process while other process is running');return;}fetch('/api/statediagram?action=start').then(response=>response.json()).then(data=>{setPid(data.pid);setCurrentAction(action);});}else{// se verifica que el pid no sea null\nif(pid!==null){// si la action es un kill se debe limpiar el pid\nif(action==='kill'){setPid(null);setPreviusAction(null);}// se manda por parametros la accion y el pid\nfetch(\"/api/statediagram?action=\".concat(action,\"&pid=\").concat(pid)).then(response=>response.json()).then(data=>{console.log(data);setCurrentAction(action);});}}// se guarda la accion previa\nsetPreviusAction(action);};return/*#__PURE__*/_jsxs(\"div\",{className:\"Contain\",children:[/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(\"button\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"/statediagram\",className:\"btn2\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"spn2\",children:[\"PID = \",pid]})})})}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"button\",onClick:()=>handleClick('start'),children:[\" \",/*#__PURE__*/_jsx(SiAddthis,{size:\"1.7em\",color:\"white\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"button\",onClick:()=>handleClick('stop'),children:[\" \",/*#__PURE__*/_jsx(FaStopCircle,{size:\"2em\",color:\"white\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"button\",onClick:()=>handleClick('resume'),children:[\" \",/*#__PURE__*/_jsx(FaCirclePlay,{size:\"2em\",color:\"white\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"button\",onClick:()=>handleClick('kill'),children:[\" \",/*#__PURE__*/_jsx(FaSkullCrossbones,{size:\"1.9em\",color:\"white\"})]})]})})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(CardG,{title:\"State Diagram\",children:/*#__PURE__*/_jsx(State,{action:currentAction})})}),/*#__PURE__*/_jsx(ToastContainer,{})]})]});}export default StateDiagram;","map":{"version":3,"names":["React","useState","CardG","Row","Col","SiAddthis","FaStopCircle","FaCirclePlay","FaSkullCrossbones","ToastContainer","toast","State","jsxs","_jsxs","jsx","_jsx","StateDiagram","pid","setPid","previusAction","setPreviusAction","currentAction","setCurrentAction","handleClick","action","error","fetch","then","response","json","data","concat","console","log","className","children","href","onClick","size","color","title"],"sources":["/home/josep/USAC/7mo_Semestre/Sistemas_operativos_1/Laboratorio/Repositorio/SO1_1S2024_202111478/Proyectos/Proyecto1/frontend/src/pages/statediagram.js"],"sourcesContent":["import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../css/statediagram.css';\nimport CardG from '../components/cardg';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { SiAddthis } from \"react-icons/si\";\nimport { FaStopCircle } from \"react-icons/fa\";\nimport { FaCirclePlay } from \"react-icons/fa6\";\nimport { FaSkullCrossbones } from \"react-icons/fa6\";\nimport {ToastContainer, toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport State from '../components/state';\n\n\n\n\n\nfunction StateDiagram() {\n    const [pid, setPid] = useState(null);\n    const [previusAction, setPreviusAction] = useState(null);\n    const [currentAction, setCurrentAction] = useState(null);\n\n    const handleClick = (action) => {\n        //Si es la accion de start se debe hacer un fetch a la api para obtener el pid\n        if (previusAction === action) {\n            toast.error('You can not do the same action twice')\n            return;\n        }\n\n        if (action === 'start') {\n\n            //si el pid es null se debe hacer un fetch a la api para obtener el pid\n            if (pid !== null) {\n                toast.error('You can not start a new process while other process is running')\n                return;\n            }\n            fetch('/api/statediagram?action=start')\n                .then(response => response.json())\n                .then(data => {\n                    setPid(data.pid);\n                    setCurrentAction(action);\n                });\n        } else{\n            // se verifica que el pid no sea null\n            if (pid !== null) {\n                // si la action es un kill se debe limpiar el pid\n                if (action === 'kill') {\n                    setPid(null);\n                    setPreviusAction(null);\n                }\n\n                // se manda por parametros la accion y el pid\n                fetch(`/api/statediagram?action=${action}&pid=${pid}`)\n                    .then(response => response.json())\n                    .then(data => {\n                        console.log(data);\n                        setCurrentAction(action);\n                    });\n            }\n        }\n\n        // se guarda la accion previa\n        setPreviusAction(action);\n\n\n    }\n\n    return (\n        <div className='Contain'>\n            <Row>\n                <Col>\n                    <button>\n                        <a href=\"/statediagram\" className=\"btn2\"><span className=\"spn2\">PID = {pid}</span></a>\n                    </button>\n                </Col>\n                <Col>\n                    <div className=\"button-container\">\n                        <button className=\"button\" onClick={() => handleClick('start')}> {/* start button */}\n                            <SiAddthis size=\"1.7em\" color=\"white\" />\n                        </button>\n                        <button className=\"button\" onClick={() => handleClick('stop')}> {/* stop button */}\n                            <FaStopCircle size=\"2em\" color='white' />\n                        </button>\n                        <button className=\"button\" onClick={() => handleClick('resume')}> {/* resume button */}\n                            <FaCirclePlay size=\"2em\" color='white' />\n                        </button>\n                        <button className=\"button\" onClick={() => handleClick('kill')}> {/* kill button */}\n                            <FaSkullCrossbones size=\"1.9em\" color='white' />\n                        </button>\n                    </div>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <CardG title={\"State Diagram\"}>\n                        <State action={currentAction} />\n                    </CardG>\n                </Col>\n            <ToastContainer />\n            </Row>\n        </div>\n    );\n}\n\nexport default StateDiagram;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}